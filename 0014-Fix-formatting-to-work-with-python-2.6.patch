From 9e8faaf11b3007acff1c6c438c754917933b1042 Mon Sep 17 00:00:00 2001
From: Ryan McCabe <rmccabe@redhat.com>
Date: Fri, 15 Sep 2017 14:32:45 -0400
Subject: [PATCH 5/5] Fix formatting to work with python 2.6

X-downstream-only: Yes

Resolves: rhbz#1495471
Signed-off-by: Ryan McCabe <rmccabe@redhat.com>
---
 cloudinit/sources/DataSourceCloudSigma.py |  2 +-
 cloudinit/util.py                         | 12 ++++++------
 tests/unittests/test_util.py              |  2 +-
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/cloudinit/sources/DataSourceCloudSigma.py b/cloudinit/sources/DataSourceCloudSigma.py
index 82e73c05..71a94e95 100644
--- a/cloudinit/sources/DataSourceCloudSigma.py
+++ b/cloudinit/sources/DataSourceCloudSigma.py
@@ -57,7 +57,7 @@ class DataSourceCloudSigma(sources.DataSource):
             LOG.warn("failed to get hypervisor product name via dmi data")
             return False
         else:
-            LOG.debug("detected hypervisor as {}".format(sys_product_name))
+            LOG.debug("detected hypervisor as {0}".format(sys_product_name))
             return 'cloudsigma' in sys_product_name.lower()
 
         LOG.warn("failed to query dmi data for system product name")
diff --git a/cloudinit/util.py b/cloudinit/util.py
index b23fd4b9..c4696252 100644
--- a/cloudinit/util.py
+++ b/cloudinit/util.py
@@ -1986,21 +1986,21 @@ def read_dmi_data(key):
     Reads dmi data with from /sys/class/dmi/id
     """
 
-    dmi_key = "{}/{}".format(DMI_SYS_PATH, key)
-    LOG.debug("querying dmi data {}".format(dmi_key))
+    dmi_key = "{0}/{1}".format(DMI_SYS_PATH, key)
+    LOG.debug("querying dmi data {0}".format(dmi_key))
     try:
         if not os.path.exists(dmi_key):
-            LOG.debug("did not find {}".format(dmi_key))
+            LOG.debug("did not find {0}".format(dmi_key))
             return None
 
         key_data = load_file(dmi_key)
         if not key_data:
-            LOG.debug("{} did not return any data".format(key))
+            LOG.debug("{0} did not return any data".format(key))
             return None
 
-        LOG.debug("dmi data {} returned {}".format(dmi_key, key_data))
+        LOG.debug("dmi data {0} returned {1}".format(dmi_key, key_data))
         return key_data.strip()
 
     except Exception as e:
-        logexc(LOG, "failed read of {}".format(dmi_key), e)
+        logexc(LOG, "failed read of {0}".format(dmi_key), e)
         return None
diff --git a/tests/unittests/test_util.py b/tests/unittests/test_util.py
index 9bfc98c1..20958bdc 100644
--- a/tests/unittests/test_util.py
+++ b/tests/unittests/test_util.py
@@ -320,7 +320,7 @@ class TestReadDMIData(helpers.FilesystemMockingTestCase):
         self._patchIn(new_root)
         util.ensure_dir(os.path.join('sys', 'class', 'dmi', 'id'))
 
-        dmi_key = "/sys/class/dmi/id/{}".format(key)
+        dmi_key = "/sys/class/dmi/id/{0}".format(key)
         util.write_file(dmi_key, content)
 
     def test_key(self):
-- 
2.13.5

